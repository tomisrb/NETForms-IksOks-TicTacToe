<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="IGRA.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>96, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAZAAAAGQCAMAAAC3Ycb+AAAABGdBTUEAALGPC/xhBQAAAiJQTFRF28ms
        2MaovaiEp49mmH5SjHFCi29AlXtOpIxivaeDpo1klnxQi3BBwKqHkXZIh2s7w66Mv6qHkHVHkXZJxK+N
        2sirq5RstJ13qpJqtZ95p45mt6F8tZ5518SmpY1juaN+uKJ9y7eXnINXtqB6zLiY1cKkn4Zcw66Lo4pg
        1MGjoYhespt1z7ycrJRssJly0L2dl31R08ChuqSAlnxP18WnpItiim8/1sOlpY1k1cOkmYBUmX9Tzrqa
        m4FWyLSTu6aBlHlMtp96y7eWspx1ybST0r+g0b6f1MKjnoVaoIdcyLSSim4/oIddzLiXj3RGvqmFx7OR
        nYNYn4ZbxrKQjXJDu6WBwayJlXpNwKuIv6qGrZVuyrWVkndJrZZuzbqaxbCOjXFDzrubsJhy2cepjnNF
        0LydvaeEiW0+zbqZuaN/rJRtiGw8kndKk3hL0b6enINYlXpO1sSmvKeDm4JWjnNEnYRZmoBVqZFpwq2K
        r5hxybWUmH9S2MWoiW4+jHBBxLCNuqWAyLOSxbGPiGw9iW09q5Nrj3NFqZFoxrGQrpZvo4thr5dwjnJE
        vKaCxrGPrpdw2capz7uctJ54knhKsZlzrJVts513yraVoopgoolf2siqk3lLtqB7pYxjqJBno4phlHpN
        t6B7noRa08GimoBUsZp01MGis5x20L2epo5lx7KR2ceqwq2LzbmZqJBosZt0moFVv6mGvqiFl31QuqR/
        qI9nMzCa9AAAAAlwSFlzAAAJNgAACTYBKxMdPQAAED5JREFUeF7t3eljFEUaBvAECZdIIBjkVBQiglyB
        EASFxWAIEAQMkUsMKAhoEFRAQMFjRcQDRQUFdJUVxSPrte7+f9vH0z1V1W9190yGJVQ/vy9O6q0ep7vo
        q84aIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
        IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiopumdtBtg+uGDB02vBYJZaodNOL2upFDhw2q
        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
        lIVy/ptoPGqPLlJzvD/+xGfhEetXsVkyNAl5SLYk5dh1TzUvLtG7yBvnlVmZzKEETZa6Et8+96cS76/d
        1mdTz3zjnSTueXhPqYl8jz6UoG9ayoRmu15DLkqRuuTERL37w/dIHnslbrvVx40el8dThUa5P7N7VeyN
        n18F+46pdSnxlBBxKXZOQch3r2W8YegoezTktDZ15pnOE6W+bFcSOZWZXdstDYOhXsdXKKyqg2Iv6Fjd
        hQ5kVNtsQ/Gqaj3pMzafSUzjTylOioN5FOPR/acZf0ew2vaVbfYJhwKr4yKlfM5ZazpgTTiMwxipONxP
        a5kmjtktOT052JbKMVvuHaT4a5J3V74Tf4T8F5KOC1kz9y5ka1Ql+n5XeyiK9n07+op2u7l4fuulU/hs
        c+R5Vl5VqCfHnMgNWvXXIbmLl+qifUguZZpqrxSszEMpIw4ph8Xj0t4Sy/WHbeYOyu/TrCfg3FbvxFdS
        /+y3zoBVht7Lls4SVIFn+juf+5Fn2Q+uumauHIVjW4EuuRcK9c/xyhYJXf1k2shP6o+W4V04ynnNOlfw
        Uc43XO2M8XkXKmwYtrVYc+/eNAf/HJfS8u4b2zX3eNoEHVR9q5Zve/T9RcsOoAhCY5deHv/jmOnIQjfF
        yWuz2345u/Hx2dc54oaIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
        iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIgGspqa/wFryZNWN8knuAAA
        AABJRU5ErkJggg==
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAEAGABoAwAAFgAAACgAAAAQAAAAIAAAAAEAGAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/JgD/JgD/JgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAD/JgAAAAD/JgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/
        JgD/JgD/JgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP8A
        AAAAAP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP8AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP8AAAAAAP8AAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD//wAA+Z8AAPmf
        AAD5nwAAwAMAAMADAAD5gwAA+YsAAPmDAADAAwAAwAMAANGfAADpnwAA0Z8AAP//AAD//wAA
</value>
  </data>
</root>